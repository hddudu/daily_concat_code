/**
 * 给你一个只由字母'A'和'B'组成的字符串s，找一个最长的子串，要求这个子串里面'A'和'B'的数目相等，输出该子串的长度
 */

/**
 *
 1. A + B 问题
 给出两个整数 aa 和 bb , 求他们的和。

 样例
 如果 a=1 并且 b=2，返回3。

 挑战
 显然你可以直接 return a + b，但是你是否可以挑战一下不这样做？（不使用++等算数运算符）

 说明
 a和b都是 32位 整数么？

 是的
 我可以使用位运算符么？

 当然可以
 注意事项
 你不需要从输入流读入数据，只需要根据aplusb的两个参数a和b，计算他们的和并返回就行。
 第1步（忽略进位）：0＋0＝0，0＋1＝1，1＋0＝0，1＋1＝0，典型的异或运算。
     第2步：很明显，只有1＋1会向前产生进位1，相对于这一数位的进位值为10，而10＝(1&1)<<1。
     第3步：将第1步和第2步得到的结果相加，其实又是在重复上述2步，直到不再产生进位为止。
 */
/**
 * @param a: An integer
 * @param b: An integer
 * @return: The sum of a and b
 */
const aplusb = function (a, b) {
    /**
     * 位运算符号
     */
    if(a == 0) return b;
    if(b == 0) return a;
    var sum, i;
    i = a ^ b;
    sum = (a & b) << 1;
    return aplusb(sum, i);
}

